// Mocks generated by Mockito 5.4.4 from annotations
// in movie_app/test/test_helper/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:typed_data' as _i8;

import 'package:dio/src/adapter.dart' as _i3;
import 'package:dio/src/options.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_app/core/resources/data_state.dart' as _i2;
import 'package:movie_app/features/authentication_feature/domain/entities/user_entity.dart'
    as _i6;
import 'package:movie_app/features/authentication_feature/domain/repository/authentication_repository.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDataState_0<T> extends _i1.SmartFake implements _i2.DataState<T> {
  _FakeDataState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponseBody_1 extends _i1.SmartFake implements _i3.ResponseBody {
  _FakeResponseBody_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationRepository extends _i1.Mock
    implements _i4.AuthenticationRepository {
  MockAuthenticationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.DataState<_i6.UserEntity>> fetchUserData(
    String? email,
    String? password,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchUserData,
          [
            email,
            password,
            name,
          ],
        ),
        returnValue: _i5.Future<_i2.DataState<_i6.UserEntity>>.value(
            _FakeDataState_0<_i6.UserEntity>(
          this,
          Invocation.method(
            #fetchUserData,
            [
              email,
              password,
              name,
            ],
          ),
        )),
      ) as _i5.Future<_i2.DataState<_i6.UserEntity>>);
}

/// A class which mocks [HttpClientAdapter].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i3.HttpClientAdapter {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.ResponseBody> fetch(
    _i7.RequestOptions? options,
    _i5.Stream<_i8.Uint8List>? requestStream,
    _i5.Future<void>? cancelFuture,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [
            options,
            requestStream,
            cancelFuture,
          ],
        ),
        returnValue: _i5.Future<_i3.ResponseBody>.value(_FakeResponseBody_1(
          this,
          Invocation.method(
            #fetch,
            [
              options,
              requestStream,
              cancelFuture,
            ],
          ),
        )),
      ) as _i5.Future<_i3.ResponseBody>);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );
}
