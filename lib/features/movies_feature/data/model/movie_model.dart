import 'package:movie_app/features/movies_feature/domain/entities/movie_entity.dart';

class MovieModel extends MovieEntity {
  const MovieModel({
    int? id,
    String? title,
    String? poster,
    String? year,
    String? rated,
    String? released,
    String? runtime,
    String? director,
    String? writer,
    String? actors,
    String? plot,
    String? country,
    String? awards,
    String? metascore,
    String? imdbRating,
    String? imdbVotes,
    String? imdbId,
    String? type,
    List<String>? genres,
    List<String>? images,
  }) : super(
            id: id,
            actors: actors,
            awards: awards,
            country: country,
            director: director,
            genres: genres,
            images: images,
            imdbId: imdbId,
            imdbRating: imdbRating,
            imdbVotes: imdbVotes,
            metascore: metascore,
            plot: plot,
            poster: poster,
            rated: rated,
            released: released,
            runtime: runtime,
            title: title,
            type: type,
            writer: writer,
            year: year);

  factory MovieModel.fromJson(Map<String, dynamic> json) {
    return MovieModel(
      id: json['id'],
      title: json['title'],
      poster: json['poster'],
      year: json['year'],
      rated: json['rated'],
      released: json['released'],
      runtime: json['runtime'],
      director: json['director'],
      writer: json['writer'],
      actors: json['actors'],
      plot: json['plot'],
      country: json['country'],
      awards: json['awards'],
      metascore: json['metascore'],
      imdbRating: json['imdb_rating'],
      imdbVotes: json['imdb_votes'],
      imdbId: json['imdb_id'],
      type: json['type'],
      genres: json['genres'] == null ? [] : json['genres'].cast<String>(),
      images: json['images'] == null ? [] : json['images'].cast<String>(),
    );
  }
}
